#pragma kernel Paint

#define THREAD_GROUP_SIZE 8

float4 BrushVector;
float BrushRadius = 2;
float4 BrushColour = float4(1.0, 0.0, 0.0, 1.0);
const float3 VoxelSamplePosition = float3(0.5, 0.5, 0.5);
float4x4 BrushMatrix;
RWStructuredBuffer<uint> Count;
Texture3D<float4> In;
RWTexture3D<float4> Out;

[numthreads(THREAD_GROUP_SIZE, THREAD_GROUP_SIZE, THREAD_GROUP_SIZE)]
void Paint(const uint3 id : SV_DispatchThreadID)
{
	InterlockedAdd(Count[0], 1);
	const float falloff = saturate(1.0 - (distance(BrushVector.xyz, id + VoxelSamplePosition) / BrushRadius));
	const float brushDensity = falloff * BrushColour.a;
	const float inDensity = (1 - brushDensity) * In[id].a;
	const float outDensity = brushDensity + inDensity;
	const float3 outColour = (BrushColour.rgb * brushDensity + In[id].rgb * inDensity) / (outDensity);
	Out[id] = float4(outColour, outDensity);
}
