#pragma kernel Paint

#define THREAD_GROUP_SIZE 8

float4 BrushVector;
float BrushRadius = 2;
float4 BrushColour = float4(1.0, 0.0, 0.0, 1.0);
const float3 VoxelSamplePosition = float3(0.5, 0.5, 0.5);
float4x4 BrushMatrix;
RWStructuredBuffer<uint> Count;
Texture3D<float4> In;
RWTexture3D<float4> Out;

[numthreads(THREAD_GROUP_SIZE, THREAD_GROUP_SIZE, THREAD_GROUP_SIZE)]
void Paint(const uint3 id : SV_DispatchThreadID)
{
	//InterlockedAdd(Count[0], 1);
	
	//color = alpha * src + (1 - alpha) * dest
	const float dist = distance(BrushVector.xyz, id + VoxelSamplePosition);
	const float weight = saturate(1.0 - (dist / BrushRadius)) * BrushColour.a;
	const float alpha = weight;
	const float3 rgb = alpha * BrushColour.rgb + (1.0 - alpha) * In[id].rgb;
	const float a = alpha + (1.0 - alpha) * In[id].a;
	Out[id] = float4(rgb, a);
}
